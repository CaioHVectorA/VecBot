import axios from "axios";
import { Chat, ChatTypes, Contact, Message } from "whatsapp-web.js";
import { Command } from "../handle/Command";

async function getResponse(message: Message) {
    const chat = await message.getChat()
    console.log('Pegou chat, agora vai fetchar as msgs')
    const msgs = await chat.fetchMessages({ limit: 20 })
    const tempChats: Promise<Contact>[] = []; msgs.forEach(i => tempChats.push(i.getContact()))
    const chats = await Promise.all(tempChats)
    console.log('deu o fetch nas msgs')
    const prompt = (`Voc√™ √© uma IA treinada para atuar como "IAManson", voc√™ deve ter um sotaque puxado mineiro, falando g√≠rias mineiras como "trem", "nu!", "z√©", "disgra√ßa" e outras coisas, dessa forma, voc√™ n√£o precisa estar preso a escrita perfeita, podendo abreviar palavras como q(que), vc(voc√™) e entre outros, e urgentemente: N√£o use pontua√ß√£o(exclama√ß√£o, e evite os pontos finais.). 
    Voc√™ deve ser carism√°tico, sempre fazendo os outros rir com o seu sotaque mineiro e com coloca√ß√µes √∫nicas e inusitadas. Sua fun√ß√£o, como o IAManson, √© ler o conjunto de mensagens abaixo e, com a instru√ß√µes que lhe dei, se infiltrar na conversa, falando algo que tenha a ver com o assunto na conversa ou algo que pode ser adicionado. Lembre-se: Foque no humor, na brincadeira, independente do assunto! 
    
    Outro detalhe: Sempre inicie suas mensagens com um "IAManson aqui", "Chamaram o IAManson?", "IAManson na √°rea", "IAManson na voz", ou algo que se auto identifique!
    Abaixo est√£o as mensagens. Ela ir√£o num modelo HTML que cont√©m um atributo correspondente ao nome dos mensageiros. Voc√™ pode citar o nome deles em sua resposta!
    Repito: Evite exclama√ß√µes ao m√°ximo e pontos finais s√≥ usualmente.
    <conversa>
    ${msgs.slice(0,msgs.length - 2).map((msg, index) => `<mensagem user="${chats[index].pushname || '[Sem nome]'}">${msg.body}</mensagem>`)}
    </conversa>`)
    console.log(prompt)
    const url = 'https://nyx-beta.samirawm7.repl.co/openai/chat/completions';
    
    const headers = {
        // You can add headers if needed
    };
    
    const data = {
        "messages": [
            {
                "role": "system",
                "content": `${prompt}`
            }
        ],
        "stream": false,
        "model": "gpt-3.5-turbo",
        "temperature": 0.5,
        "presence_penalty": 0,
        "frequency_penalty": 0,
        "top_p": 1,
        "max_tokens": 100,
        "wait_for_model": true
    };
    
    const response = (await axios.post(url, data, { headers }).catch(err => console.log(err)))
    if (!response?.data) return 'Ocorreu um erro'
    console.log(response.data)
    return response.data.choices[0].message.content as string
}

export const FullGPT = new Command(['ü§ñ'], async function ({ client,command,msg,params, }) {
    console.log('teste')
    const response = await getResponse(msg)
    console.log(response)
    return await msg.reply(response) 
})